package main

import "fmt"

/*

结构体的继承是通过结构体的嵌套实现的
继承，继承了父结构体中的属性和方法

一个结构体中可以嵌套包含另一个结构体或结构体指针


*/
// 父结构体
type Animal struct{
	name string
}

func (a *Animal)run(){
	fmt.Printf("%s 会运动\n",a.name)
}

//子结构体
type Dog struct {
	Age int8
	Animal //通过匿名结构体来实现继承
}


func (d *Dog) wang(){
	fmt.Printf("%s 会汪汪\n",d.Age)
}


func main(){

	var d = Dog{
		Age: 20,
		Animal:Animal{
			name: "哈士奇",
		},
	}
	d.run()
	d.wang()
}




package main

import "fmt"

/*

结构体的继承是通过结构体的嵌套实现的
继承，继承了父结构体中的属性和方法

一个结构体中可以嵌套包含另一个结构体或结构体指针


*/
// 父结构体
type Animal struct{
	name string
}

func (a *Animal)run(){
	fmt.Printf("%s 会运动\n",a.name)
}

//子结构体
type Dog struct {
	Age int8
	*Animal //通过匿名结构体来实现继承
}


func (d *Dog) wang(){
	fmt.Printf("%s 会汪汪\n",d.Age)
}


func main(){

	var d = Dog{
		Age: 20,
		Animal:&Animal{
			name: "哈士奇",
		},
	}
	d.run()
	d.wang()
}